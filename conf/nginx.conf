worker_processes  1;

events {
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;
    server_tokens off;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;
        set_real_ip_from 192.168.20.0/24;
        log_format json escape=json '{'
        '"remote_addr": "$realip_remote_addr",' # client IP
        '"request": "$request",' # full path no arguments if the request
        '"msec": "$msec",' # request unixtime in seconds with a milliseconds resolution
        '"connection": "$connection",' # connection serial number
        '"connection_requests": "$connection_requests",' # number of requests made in connection
        '"pid": "$pid",' # process pid
        '"request_id": "$request_id",' # the unique request id
        '"request_length": "$request_length",' # request length (including headers and body)
        '"remote_user": "$remote_user",' # client HTTP username
        '"remote_port": "$remote_port",' # client port
        '"time_local": "$time_local",'
        '"time_iso8601": "$time_iso8601",' # local time in the ISO 8601 standard form
        '"request_uri": "$request_uri",' # full path and arguments if the request
        '"args": "$args",' # args
        '"status": "$status",' # response status code
        '"body_bytes_sent": "$body_bytes_sent",' # the number of body bytes exclude headers sent to a client
        '"bytes_sent": "$bytes_sent",' # the number of bytes sent to a client
        '"http_referer": "$http_referer",' # HTTP referer
        '"http_user_agent": "$http_user_agent",' # user agent
        '"http_x_forwarded_for": "$http_x_forwarded_for",' # http_x_forwarded_for
        '"http_host": "$http_host",' # the request Host: header
        '"server_name": "$server_name",' # the name of the vhost serving the request
        '"request_time": "$request_time",' # request processing time in seconds with msec resolution
        '"upstream": "$upstream_addr",' # upstream backend server for proxied requests
        '"upstream_connect_time": "$upstream_connect_time",' # upstream handshake time incl. TLS
        '"upstream_header_time": "$upstream_header_time",' # time spent receiving upstream headers
        '"upstream_response_time": "$upstream_response_time",' # time spend receiving upstream body
        '"upstream_response_length": "$upstream_response_length",' # upstream response length
        '"upstream_cache_status": "$upstream_cache_status",' # cache HIT/MISS where applicable
        '"ssl_protocol": "$ssl_protocol",' # TLS protoco
        '"ssl_cipher": "$ssl_cipher",' # TLS cipher
        '"scheme": "$scheme",' # http or https
        '"request_method": "$request_method",' # request method
        '"server_protocol": "$server_protocol",' # request protocol, like HTTP/1.1 or HTTP/2.0
        '"pipe": "$pipe",' # "p" if request was pipelined, "." otherwise
        '"gzip_ratio": "$gzip_ratio",'
        '"http_cf_ray": "$http_cf_ray",'
        '}';

    access_log  /var/log/nginx/access.log  json;

    sendfile        on;
    keepalive_timeout  65;

server {
       listen 80;
       server_name _;
       return 301 https://$host$request_uri;
}
    server {
        server_name sv50.yolopix.net;
        listen    443 ssl http2;
        listen [::]:443 ssl http2;
        #ssl_certificate /etc/nginx/nginx-selfsigned.crt;
        #ssl_certificate_key /etc/nginx/nginx-selfsigned.key;
        ssl_certificate /etc/certs/live/sv50.yolopix.net/fullchain.pem;
        ssl_certificate_key /etc/certs/live/sv50.yolopix.net/privkey.pem;
        ssl_protocols TLSv1.3;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver_timeout 5s;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/nginx/dhparam.pem;
        resolver 127.0.0.1 valid=30;

        error_page   404 /404;

            location /test {
            root /var/www/html/;
            index test.html;
            try_files $uri $uri.html;
        }

        location /404 {
            root /var/www/html/;
            index 404.html;
            try_files $uri $uri.html;
        }

        location / {
            proxy_set_header        Host $host:$server_port;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_pass http://192.168.20.30/;
        }

        location /grafana {
            proxy_pass http://grafana:3000;
            proxy_set_header Host                 $http_host;
            proxy_set_header X-Real-IP            $remote_addr;
            proxy_set_header X-Forwarded-For      $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto    "https";
        }

        location /portainer/ {
            proxy_pass http://portainer:9000/;
        }

}

}
